NAME        = libftprintf.a

INCLUDE     = includes

LIBFT       = libft

OBJ_DIR     = obj/

CC          = cc

CFLAGS      = ##-Wall -Werror -Wextra -I

CFLAGSTEST  = -I

RM          = rm -f

AR          = ar rcs

TEST        = test.c

LIBTEST     = ftprintf

SRC_DIR = src/

SRC_FILES = ft_printf             \
			func_ptr              \
			func_putnbr           \
			utils_1               \
			utils_2               \
			std_func              \
			std_func_2            \
			func_conv/func_s_c    \
			func_conv/func_e_f    \
			func_conv/func_p      \
			func_conv/func_u      \
			func_conv/func_x      \
			func_conv/func_o      \
			func_conv/func_d_i    \
			func_conv/func_b      \
			func_conv/func_g      \
			func_conv/func_n      \
			get_info/get_info     \
			get_info/get_info_2   \
			free_info/free_1

SRC         =   $(addprefix $(SRC_DIR), $(addsuffix .c, $(SRC_FILES)))

OBJ         =   $(addprefix $(OBJ_DIR), $(addsuffix .o, $(notdir $(basename $(SRC_FILES)))))

OBJF        =   .cache_exists

all:        $(NAME)

$(NAME):    $(OBJ)
			@make -C $(LIBFT)
			@cp libft/libft.a .
			@mv libft.a $(NAME)
			@$(AR) $(NAME) $(OBJ)
			@ranlib $(NAME)
			@echo "FT_PRINTF compiled!"

$(OBJ_DIR)%.o: $(SRC_DIR)%.c | $(OBJF)
			@$(CC) $(CFLAGS) $(INCLUDE) -c $< -o $@

$(OBJF):
			@mkdir -p $(OBJ_DIR)

bonus:      all

test:       $(NAME)
			$(CC) $(TEST) -L. -l$(LIBTEST) $(CFLAGSTEST) $(INCLUDE)

clean:
			@$(RM) -rf $(OBJ_DIR)
			@make clean -C $(LIBFT)

fclean:     clean
			@$(RM) -f $(NAME)
			@$(RM) -f $(LIBFT)/libft.a
			@$(RM) -f ./a.out

re:         fclean all

.PHONY:     all clean fclean re test